{"version":3,"sources":["static/img/profilepicture.JPG","components/About.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","skills","languages","name","score","technologies","console","log","className","map","lang","rating","starRatedColor","starDimension","starSpacing","tech","Main","React","useState","value","setValue","href","src","profilepicture","alt","target","rel","icon","faGithub","size","faLinkedin","faInstagram","Paper","Tabs","onChange","event","newTab","indicatorColor","textColor","centered","Tab","label","App","path","component","Projects","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6HAAAA,EAAOC,QAAU,IAA0B,4C,kQC6H5BC,EAzHD,WACZ,IAAMC,EAAS,CACbC,UAAW,CACT,CACEC,KAAM,OACNC,MAAO,GAET,CACED,KAAM,aACNC,MAAO,KAET,CACED,KAAM,SACNC,MAAO,MAGXC,aAAc,CACZ,CACEF,KAAM,UACNC,MAAO,GAET,CACED,KAAM,QACNC,MAAO,GAET,CACED,KAAM,QACNC,MAAO,KAET,CACED,KAAM,OACNC,MAAO,KAET,CACED,KAAM,SACNC,MAAO,GAGT,CACED,KAAM,UACNC,MAAO,KAET,CACED,KAAM,QACNC,MAAO,KAKb,OADAE,QAAQC,IAAIN,GAEV,yBAAKO,UAAU,aACb,yBAAKA,UAAU,YACb,mNAOF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iBACb,yCAEA,8DACA,uBAAGA,UAAU,OAAb,0CAC0C,IACxC,0BAAMA,UAAU,QAAhB,wBAGF,+CACA,uBAAGA,UAAU,OAAb,oBACmB,0BAAMA,UAAU,QAAhB,yBAIrB,yBAAKA,UAAU,cACb,sCAEA,yCACA,4BACGP,EAAOC,UAAUO,KAAI,SAAAC,GAAI,OACxB,oCACE,4BACGA,EAAKP,KACN,0BAAMK,UAAU,OACd,kBAAC,IAAD,CACEG,OAAQD,EAAKN,MACbQ,eAAe,MACfC,cAAc,OACdC,YAAY,eAOxB,6BACA,4CACA,4BACGb,EAAOI,aAAaI,KAAI,SAAAM,GAAI,OAC3B,oCACE,4BACGA,EAAKZ,KACN,0BAAMK,UAAU,OACd,kBAAC,IAAD,CACEG,OAAQI,EAAKX,MACbQ,eAAe,OACfC,cAAc,OACdC,YAAY,mB,QCjCnBE,EAnEF,WAAO,IAAD,EACSC,IAAMC,SAAS,GADxB,mBACVC,EADU,KACHC,EADG,KAOjB,OACE,yBAAKZ,UAAU,aACb,yBAAKA,UAAU,kBACb,uBAAGa,KAAK,gDACN,yBACEb,UAAU,kBACVc,IAAKC,IACLC,IAAI,sBAIR,6BAEA,uBACEH,KAAK,qCACLI,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,CAAiBC,KAAMC,IAAUC,KAAK,QAGxC,uBACER,KAAK,0CACLI,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,CAAiBC,KAAMG,IAAYD,KAAK,QAG1C,uBACER,KAAK,wCACLI,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,CAAiBC,KAAMI,IAAaF,KAAK,QAG3C,gDAEA,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEd,MAAOA,EACPe,SA9CW,SAACC,EAAOC,GACzBhB,EAASgB,IA8CHC,eAAe,UACfC,UAAU,UACVC,UAAQ,GAER,kBAACC,EAAA,EAAD,CAAKC,MAAM,aACX,kBAACD,EAAA,EAAD,CAAKC,MAAM,aACX,kBAACD,EAAA,EAAD,CAAKC,MAAM,gBAGf,6BACE,kBAAC,EAAD,U,MCnDKC,MAbf,WACI,OACI,yBAAKlC,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOmC,KAAK,MACZ,kBAAC,IAAD,CAAOA,KAAK,SAASC,UAAW5C,IAChC,kBAAC,IAAD,CAAO2C,KAAK,YAAYC,UAAWC,OCH/BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCXNC,IAASC,OACT,kBAAC,IAAD,KACI,kBAAC,EAAD,OAGJC,SAASC,eAAe,SDuHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e128a358.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilepicture.1d7587c5.JPG\";","import React from \"react\";\r\nimport \"../static/styling/about.css\";\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\nconst About = () => {\r\n  const skills = {\r\n    languages: [\r\n      {\r\n        name: \"Java\",\r\n        score: 4\r\n      },\r\n      {\r\n        name: \"JavaScript\",\r\n        score: 3.5\r\n      },\r\n      {\r\n        name: \"Python\",\r\n        score: 4.5\r\n      }\r\n    ],\r\n    technologies: [\r\n      {\r\n        name: \"ReactJS\",\r\n        score: 4\r\n      },\r\n      {\r\n        name: \"Redux\",\r\n        score: 4\r\n      },\r\n      {\r\n        name: \"HTML5\",\r\n        score: 4.5\r\n      },\r\n      {\r\n        name: \"CSS3\",\r\n        score: 4.5\r\n      },\r\n      {\r\n        name: \"NodeJS\",\r\n        score: 4\r\n      },\r\n\r\n      {\r\n        name: \"MongoDB\",\r\n        score: 3.5\r\n      },\r\n      {\r\n        name: \"NoSQL\",\r\n        score: 3\r\n      }\r\n    ]\r\n  };\r\n  console.log(skills);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"about-me\">\r\n        <p>\r\n          Hello! My name is Angelo Solitario. I am a recent graduate of Computer\r\n          Science from San Francisco State University. I enjoy programming and\r\n          gaining new things during my free time.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col education\">\r\n          <h1>Education</h1>\r\n          {/*This will be the education part */}\r\n          <h4>San Francisco State University</h4>\r\n          <p className=\"tab\">\r\n            Bachelor of Science in Computer Science{\" \"}\r\n            <span className=\"date\">Aug 2017 - Dec 2019</span>\r\n          </p>\r\n\r\n          <h4>Skyline College</h4>\r\n          <p className=\"tab\">\r\n            Transfer Program <span className=\"date\">Aug 2014 - May 2017</span>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"col skills\">\r\n          <h1>Skills</h1>\r\n\r\n          <h5>Languages</h5>\r\n          <ul>\r\n            {skills.languages.map(lang => (\r\n              <>\r\n                <li>\r\n                  {lang.name}\r\n                  <span className=\"tab\">\r\n                    <StarRatings\r\n                      rating={lang.score}\r\n                      starRatedColor=\"red\"\r\n                      starDimension=\"20px\"\r\n                      starSpacing=\"5px\"\r\n                    />\r\n                  </span>\r\n                </li>\r\n              </>\r\n            ))}\r\n          </ul>\r\n          <br />\r\n          <h5>Technologies</h5>\r\n          <ul>\r\n            {skills.technologies.map(tech => (\r\n              <>\r\n                <li>\r\n                  {tech.name}\r\n                  <span className=\"tab\">\r\n                    <StarRatings\r\n                      rating={tech.score}\r\n                      starRatedColor=\"blue\"\r\n                      starDimension=\"20px\"\r\n                      starSpacing=\"5px\"\r\n                    />\r\n                  </span>\r\n                </li>\r\n              </>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"../static/styling/about.css\";\r\nimport profilepicture from \"../static/img/profilepicture.JPG\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Paper, Tabs, Tab } from \"@material-ui/core\";\r\nimport About from \"./About\";\r\nimport {\r\n  faGithub,\r\n  faLinkedin,\r\n  faInstagram\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Main = () => {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newTab) => {\r\n      setValue(newTab)\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"profile-header\">\r\n        <a href=\"https://angelosolitario.github.io/portfolio/\">\r\n          <img\r\n            className=\"profile-picture\"\r\n            src={profilepicture}\r\n            alt=\"angelo-solitario\"\r\n          ></img>\r\n        </a>\r\n\r\n        <br />\r\n\r\n        <a\r\n          href=\"https://github.com/angelosolitario\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <FontAwesomeIcon icon={faGithub} size=\"2x\" />\r\n        </a>\r\n\r\n        <a\r\n          href=\"https://linkedin.com/in/angelosolitario\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n        </a>\r\n\r\n        <a\r\n          href=\"https://instagram.com/angelosolitario\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\r\n        </a>\r\n\r\n        <h1>ANGELO SOLITARIO</h1>\r\n\r\n        <Paper>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"About Me\" />\r\n            <Tab label=\"Projects\" />\r\n            <Tab label=\"ResumÃ©\" />\r\n          </Tabs>\r\n        </Paper>\r\n        <div>\r\n          <About />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Main from './components/Main'\r\nimport About from \"./components/About\";\r\nimport Projects from \"./components/About\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Main />\r\n            <Switch>\r\n                <Route path=\"/\"></Route>\r\n                <Route path=\"/about\" component={About}></Route>\r\n                <Route path=\"/projects\" component={Projects}></Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n<Router>\r\n    <App />\r\n</Router>\r\n,\r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}